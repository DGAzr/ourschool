"""Initial database schema

Revision ID: 74e3c52e185b
Revises: 
Create Date: 2025-08-07 23:19:33.664481

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '74e3c52e185b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('scheduled_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('estimated_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('difficulty_level', sa.Enum('beginner', 'intermediate', 'advanced', name='difficultylevel'), nullable=True),
    sa.Column('materials_needed', sa.Text(), nullable=True),
    sa.Column('objectives', sa.Text(), nullable=True),
    sa.Column('prerequisites', sa.Text(), nullable=True),
    sa.Column('resources', sa.Text(), nullable=True),
    sa.Column('lesson_order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lessons_id'), 'lessons', ['id'], unique=False)
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subjects_id'), 'subjects', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'student', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('grade_level', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('assignment_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('assignment_type', sa.Enum('homework', 'project', 'test', 'quiz', 'essay', 'presentation', 'worksheet', 'reading', 'practice', name='assignmenttype'), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('max_points', sa.Integer(), nullable=False),
    sa.Column('estimated_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('difficulty_level', sa.Enum('beginner', 'intermediate', 'advanced', name='difficultylevel'), nullable=True),
    sa.Column('prerequisites', sa.Text(), nullable=True),
    sa.Column('materials_needed', sa.Text(), nullable=True),
    sa.Column('is_exportable', sa.Boolean(), nullable=True),
    sa.Column('export_data', sa.Text(), nullable=True),
    sa.Column('order_in_lesson', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assignment_templates_id'), 'assignment_templates', ['id'], unique=False)
    op.create_table('attendance_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('present', 'absent', 'late', 'excused', name='attendancestatus'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attendance_records_id'), 'attendance_records', ['id'], unique=False)
    op.create_table('journal_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('entry_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_journal_entries_id'), 'journal_entries', ['id'], unique=False)
    op.create_index(op.f('ix_journal_entries_student_id'), 'journal_entries', ['student_id'], unique=False)
    op.create_table('terms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('academic_year', sa.String(), nullable=False),
    sa.Column('term_type', sa.Enum('semester', 'quarter', 'trimester', 'custom', name='termtype'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('term_order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_terms_id'), 'terms', ['id'], unique=False)
    op.create_table('lesson_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('assignment_template_id', sa.Integer(), nullable=False),
    sa.Column('order_in_lesson', sa.Integer(), nullable=True),
    sa.Column('planned_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('custom_instructions', sa.Text(), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('custom_max_points', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_template_id'], ['assignment_templates.id'], ),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lesson_assignments_id'), 'lesson_assignments', ['id'], unique=False)
    op.create_table('student_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('assigned_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('extended_due_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('not_started', 'in_progress', 'completed', 'submitted', 'graded', 'overdue', 'excused', name='assignmentstatus'), nullable=True),
    sa.Column('started_date', sa.Date(), nullable=True),
    sa.Column('completed_date', sa.Date(), nullable=True),
    sa.Column('submitted_date', sa.Date(), nullable=True),
    sa.Column('points_earned', sa.Float(), nullable=True),
    sa.Column('percentage_grade', sa.Float(), nullable=True),
    sa.Column('letter_grade', sa.String(), nullable=True),
    sa.Column('is_graded', sa.Boolean(), nullable=True),
    sa.Column('graded_date', sa.Date(), nullable=True),
    sa.Column('graded_by', sa.Integer(), nullable=True),
    sa.Column('teacher_feedback', sa.Text(), nullable=True),
    sa.Column('student_notes', sa.Text(), nullable=True),
    sa.Column('submission_notes', sa.Text(), nullable=True),
    sa.Column('time_spent_minutes', sa.Integer(), nullable=True),
    sa.Column('custom_instructions', sa.Text(), nullable=True),
    sa.Column('custom_max_points', sa.Integer(), nullable=True),
    sa.Column('assigned_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['graded_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['assignment_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_assignments_id'), 'student_assignments', ['id'], unique=False)
    op.create_table('term_subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('term_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('grading_scale', sa.Text(), nullable=True),
    sa.Column('learning_goals', sa.Text(), nullable=True),
    sa.Column('teacher_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['terms.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('term_id', 'subject_id', name='uq_term_subject')
    )
    op.create_index(op.f('ix_term_subjects_id'), 'term_subjects', ['id'], unique=False)
    op.create_table('student_term_grades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('term_subject_id', sa.Integer(), nullable=False),
    sa.Column('current_points_earned', sa.Float(), nullable=True),
    sa.Column('current_points_possible', sa.Float(), nullable=True),
    sa.Column('current_percentage', sa.Float(), nullable=True),
    sa.Column('current_letter_grade', sa.String(), nullable=True),
    sa.Column('final_points_earned', sa.Float(), nullable=True),
    sa.Column('final_points_possible', sa.Float(), nullable=True),
    sa.Column('final_percentage', sa.Float(), nullable=True),
    sa.Column('final_letter_grade', sa.String(), nullable=True),
    sa.Column('is_finalized', sa.Boolean(), nullable=True),
    sa.Column('finalized_date', sa.Date(), nullable=True),
    sa.Column('finalized_by', sa.Integer(), nullable=True),
    sa.Column('assignments_completed', sa.Integer(), nullable=True),
    sa.Column('assignments_total', sa.Integer(), nullable=True),
    sa.Column('attendance_rate', sa.Float(), nullable=True),
    sa.Column('progress_notes', sa.Text(), nullable=True),
    sa.Column('student_reflection', sa.Text(), nullable=True),
    sa.Column('parent_notes', sa.Text(), nullable=True),
    sa.Column('learning_goals', sa.Text(), nullable=True),
    sa.Column('areas_for_improvement', sa.Text(), nullable=True),
    sa.Column('strengths', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_calculated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['finalized_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['term_subject_id'], ['term_subjects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'term_subject_id', name='uq_student_term_subject')
    )
    op.create_index(op.f('ix_student_term_grades_id'), 'student_term_grades', ['id'], unique=False)
    op.create_table('grade_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_term_grade_id', sa.Integer(), nullable=False),
    sa.Column('field_name', sa.String(), nullable=False),
    sa.Column('old_value', sa.String(), nullable=True),
    sa.Column('new_value', sa.String(), nullable=True),
    sa.Column('change_reason', sa.Text(), nullable=True),
    sa.Column('changed_by', sa.Integer(), nullable=False),
    sa.Column('changed_at', sa.DateTime(), nullable=True),
    sa.Column('assignment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['student_assignments.id'], ),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['student_term_grade_id'], ['student_term_grades.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_grade_history_id'), 'grade_history', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_grade_history_id'), table_name='grade_history')
    op.drop_table('grade_history')
    op.drop_index(op.f('ix_student_term_grades_id'), table_name='student_term_grades')
    op.drop_table('student_term_grades')
    op.drop_index(op.f('ix_term_subjects_id'), table_name='term_subjects')
    op.drop_table('term_subjects')
    op.drop_index(op.f('ix_student_assignments_id'), table_name='student_assignments')
    op.drop_table('student_assignments')
    op.drop_index(op.f('ix_lesson_assignments_id'), table_name='lesson_assignments')
    op.drop_table('lesson_assignments')
    op.drop_index(op.f('ix_terms_id'), table_name='terms')
    op.drop_table('terms')
    op.drop_index(op.f('ix_journal_entries_student_id'), table_name='journal_entries')
    op.drop_index(op.f('ix_journal_entries_id'), table_name='journal_entries')
    op.drop_table('journal_entries')
    op.drop_index(op.f('ix_attendance_records_id'), table_name='attendance_records')
    op.drop_table('attendance_records')
    op.drop_index(op.f('ix_assignment_templates_id'), table_name='assignment_templates')
    op.drop_table('assignment_templates')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_subjects_id'), table_name='subjects')
    op.drop_table('subjects')
    op.drop_index(op.f('ix_lessons_id'), table_name='lessons')
    op.drop_table('lessons')
    # ### end Alembic commands ###
